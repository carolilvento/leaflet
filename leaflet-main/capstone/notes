<!-- CODE WITH EVERYTHING WORKING BUT GRAPHS DISAPPEARED
for ( let i = 0; i < places.length; i++ ) {

  var marker = L.marker( [ places[i].Latitude, places[i].Longitude ] )
  .bindPopup('<h3>' + places[i].SystemName + '</h3>' + '<p>' + 'Serves ' + places[i].PopServed + ' people' + '</p>')
  .addTo(map);

  marker.on('click', function() {
    updateInfoBox(places[i].SystemName, places[i].PopServed);
    // CREATE INFO BOX THAT SHOWS UP ON CLICK
    function updateInfoBox(systemName, popServed) {

    var locationID = places[i].ID
    var currentPFHxS = PFAS_data[0][locationID]['Year']['2022']['PFHxS']
    var currentPFOS = PFAS_data[0][locationID]['Year']['2022']['PFOS']
    var currentPFOA = PFAS_data[0][locationID]['Year']['2022']['PFOA']
    var currentPFHxA = PFAS_data[0][locationID]['Year']['2022']['PFHxA']
    var totalPFAS = currentPFHxS + currentPFOS + currentPFOA + currentPFHxA

    var infoBox = document.getElementById('info');
    infoBox.innerHTML = "<p>You are being served by " + systemName + ". This facility's most recent testing showed " + totalPFAS + " parts per trillion of PFAS.</p>";
  }

//create chart
    var container = document.getElementById('container');
    Highcharts.chart('container', {
    chart: {
      type: 'column'
    },
    title: {
      text: 'PFAS Levels in ' + places[i].SystemName + places[i].ID
    },
    subtitle: {
      text: 'Source: City of Ocala'
    },
    xAxis: {
      categories: [
        'PFHxS',
        'PFOS',
        'PFOA',
        'PFHxA'
      ],
      crosshair: true
    },
    yAxis: {
      min: 0,
      title: {
        text: 'PFAS Compound Results (ng/l)'
      }
    },
    tooltip: {
      headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
      pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
        '<td style="padding:0"><b>{point.y:.1f} ppt</b></td></tr>',
      footerFormat: '</table>',
      shared: true,
      useHTML: true
    },
    plotOptions: {
      column: {
        pointPadding: 0.2,
        borderWidth: 0
      }
    },
    series: [{
      name: '2019',
      data: [PFAS_data[0][locationID]['Year']['2019']['PFHxS'], PFAS_data[0][locationID]['Year']['2019']['PFOS'], PFAS_data[0][locationID]['Year']['2019']['PFOA'], PFAS_data[0][locationID]['Year']['2019']['PFHxA']]

    }, {
      name: '2020',
      data: [PFAS_data[0][locationID]['Year']['2020']['PFHxS'], PFAS_data[0][locationID]['Year']['2020']['PFOS'], PFAS_data[0][locationID]['Year']['2020']['PFOA'], PFAS_data[0][locationID]['Year']['2020']['PFHxA']]

    }, {
      name: '2021',
      data: [PFAS_data[0][locationID]['Year']['2021']['PFHxS'], PFAS_data[0][locationID]['Year']['2021']['PFOS'], PFAS_data[0][locationID]['Year']['2021']['PFOA'], PFAS_data[0][locationID]['Year']['2021']['PFHxA']]

    }, {
      name: '2022',
      data: [PFAS_data[0][locationID]['Year']['2022']['PFHxS'], PFAS_data[0][locationID]['Year']['2022']['PFOS'], PFAS_data[0][locationID]['Year']['2022']['PFOA'], PFAS_data[0][locationID]['Year']['2022']['PFHxA']]

    }]
    });
  });

} -->
